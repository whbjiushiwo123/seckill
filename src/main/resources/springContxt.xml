<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd 
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 配置整合mybatis过程 -->
	<!-- 1:配置数据库相关参数properties的属性:${url} -->
	<context:property-placeholder location="classpath:jdbc.properties" />

	<!-- 2:数据库连接池 -->
	 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <!-- 配置连接池属性-->
        <property name="driverClassName" value="${driver}" />
        <property name="url" value="${url}" />
        <property name="username" value="${name}" />
        <property name="password" value="${password}" />
       
     </bean>

	<!-- 约定大于配置 -->
	<!-- 3:配置SqlSessionFactory对象 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBatis全局配置文件：mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<!-- 扫描entity包 使用别名 -->
		<!-- <property name="typeAliasesPackage" value="com.seckill.entity" /> -->
		<!-- 扫描sql配置文件；mapper需要的xml文件 -->
		<property name="mapperLocations" value="classpath:mapper/*.xml" />
	</bean>

	<!-- 4:配置扫描Dao接口包，动态实现Dao接口，注入到Spring容器中 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 注入sqlSessionFactory -->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<!-- 给出扫描Dao接口包 -->
		<property name="basePackage" value="com.seckill.dao" />
	</bean>

	<!-- 5:RedisDao配置 -->
	<bean id="redisDao" class="com.seckill.dao.cache.RedisDao">
		<constructor-arg index="0" value="47.75.6.237" />
		<constructor-arg index="1" value="6379" />
	</bean>
	<!-- 扫描service包下所有使用注解的类型 -->
	<context:component-scan base-package="com.seckill.service" />

	<!-- 配置事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置基于注解的声明式事务 默认使用注解来管理事务行为 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 配置SpringMVC -->
	<!-- 1.开启SpringMVC注解模式 -->
	<!-- 简化配置 1）自动注册DefaultAnnotationHandlerMapping, AnnotationMethodHandlerAdapter 
		2）提供一系列功能：数据绑定，数字和日期的format @NumberFormat，@DateTimeFormat，xml， json默认读写支持。 -->
	<mvc:annotation-driven />

	<!-- 2.静态资源默认servlet配置 1）加入对静态资源的处理：js,gif,png 2）允许使用 "/" 做整体映射 -->
	<mvc:default-servlet-handler />

	<!-- 3.配置jsp 显示ViewResolver -->
	<bean id="viewResolver"
     class="org.springframework.web.servlet.view.InternalResourceViewResolver">
     <property name="viewClass" value="org.springframework.web.servlet.view.InternalResourceView"/>
       <property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
		<property name="contentType" value="text/html;charset=UTF-8"/>
    </bean>
	<!-- 4.扫描web相关的bean -->
	<context:component-scan base-package="com.seckill.web" />
</beans>